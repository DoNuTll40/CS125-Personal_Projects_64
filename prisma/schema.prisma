// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  TEACHER
}

enum sType {
  PRIMARY1
  PRIMARY2
  SECONDARY1
  SECONDARY2
}

model Users {
  user_id        Int      @id @default(autoincrement())
  user_username  String
  user_password  String
  user_role      Role     @default(USER)
  user_firstname String
  user_lastname  String
  user_nickname  String
  user_email     String
  user_phone     String
  user_address   String
  user_brithday  DateTime @db.Date
  user_identity  String   @unique @db.VarChar(16)
  user_image     String   @default("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSQJxKGGpPc9-5g25KWwnsCCy9O_dlS4HWo5A&usqp=CAU")
  class          Class    @relation(fields: [class_id], references: [class_id], onDelete: Cascade, onUpdate: Cascade)
  class_id       Int
  table          table[]

  @@map("users")
}

model Subject {
  sub_id   Int     @id @default(autoincrement())
  sub_name String
  sub_day  String
  sub_time String?
  room     Room    @relation(fields: [room_id], references: [room_id], onDelete: Cascade, onUpdate: Cascade)
  room_id  Int
  major    Major   @relation(fields: [Major_id], references: [major_id], onDelete: Cascade, onUpdate: Cascade)
  Major_id Int     @map("major_id")
  table    table[]

  @@map("subject")
}

model Major {
  major_id   Int       @id @default(autoincrement())
  major_name String
  Subject    Subject[]

  @@map("major")
}

model Room {
  room_id     Int       @id @default(autoincrement())
  room_name   String
  room_number Int
  build       Builds    @relation(fields: [build_id], references: [build_id], onDelete: Cascade, onUpdate: Cascade)
  build_id    Int
  Subject     Subject[]

  @@map("room")
}

model Builds {
  build_id     Int     @id @default(autoincrement())
  build_name   String
  build_number String
  build_image  String?
  room         Room[]

  @@map("builds")
}

model Section {
  sec_id   Int     @id @default(autoincrement())
  sec_type sType
  class    Class[]

  @@map("section")
}

model Class {
  class_id     Int     @id @default(autoincrement())
  class_number String
  section      Section @relation(fields: [sec_id], references: [sec_id], onDelete: Cascade, onUpdate: Cascade)
  sec_id       Int
  Users        Users[]
  table        table[]

  @@map("class")
}

model table {
  table_id    Int     @id @default(autoincrement())
  table_day   String
  table_time  String
  table_count Int     @default(1)
  class       Class   @relation(fields: [Class_id], references: [class_id], onDelete: Cascade, onUpdate: Cascade)
  Class_id    Int     @map("class_id")
  subject     Subject @relation(fields: [Sub_id], references: [sub_id], onDelete: Cascade, onUpdate: Cascade)
  Sub_id      Int     @map("sub_id")
  user        Users   @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: Cascade)
  user_id     Int
}
